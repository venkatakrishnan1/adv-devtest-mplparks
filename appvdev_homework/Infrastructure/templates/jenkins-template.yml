apiVersion: v1
kind: Template
labels:
  app: jenkins-persistent
  template: jenkins-persistent-template
message: A Jenkins service has been created in your project.  Log into Jenkins with
  your OpenShift account.  The tutorial at https://github.com/openshift/origin/blob/master/examples/jenkins/README.md
  contains more information about using this template.
metadata:
  annotations:
  name: jenkins-persistent
objects:
- apiVersion: v1
  kind: Route
  metadata:
    annotations:
      haproxy.router.openshift.io/timeout: 4m
      template.openshift.io/expose-uri: http://{.spec.host}{.spec.path}
    name: "jenkins"
  spec:
    tls:
      insecureEdgeTerminationPolicy: Redirect
      termination: edge
    to:
      kind: Service
      name: "jenkins"
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: "jenkins"
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        cpu: 1
        memory: 2Gi
        storage: "4Gi"
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      template.alpha.openshift.io/wait-for-ready: 'true'
    name: "jenkins"
  spec:
    replicas: 1
    selector:
      name: "jenkins"
    strategy:
      recreateParams:
      timeoutSeconds: 600
      type: Recreate
    template:
      metadata:
        labels:
          name: "jenkins"
      spec:
        containers:
        - capabilities: {}
          env:
            - name: OPENSHIFT_ENABLE_OAUTH
              value: 'true'
            - name: OPENSHIFT_ENABLE_REDIRECT_PROMPT
              value: 'true'
            - name: KUBERNETES_MASTER
              value: 'https://kubernetes.default:443'
            - name: KUBERNETES_TRUST_CERTIFICATES
              value: 'true'
            - name: JENKINS_SERVICE_NAME
              value: jenkins
            - name: JNLP_SERVICE_NAME
              value: jenkins-jnlp
            - name: DISABLE_ADMINISTRATIVE_MONITORS
              value: 'true'
          image: " "
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 2
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 420
            periodSeconds: 360
            successThreshold: 1
            timeoutSeconds: 240
          name: jenkins
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /login
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 3
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 240
          resources:
            limits:
              memory: 2Gi
              cpu: 2
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: "/dev/termination-log"
          volumeMounts:
          - mountPath: "/var/lib/jenkins"
            name: "jenkins-data"
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        serviceAccountName: "jenkins"
        volumes:
        - name: "jenkins-data"
          persistentVolumeClaim:
            claimName: "jenkins"
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - jenkins
        from:
          kind: ImageStreamTag
          name: "jenkins:2"
          namespace: "openshift"
        lastTriggeredImage: ''
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    annotations:
      serviceaccounts.openshift.io/oauth-redirectreference.jenkins: '{"kind":"OAuthRedirectReference","apiVersion":"v1","reference":{"kind":"Route","name":"jenkins"}}'
    name: "jenkins"
    namespace: "${NAMESPACE}"
- apiVersion: v1
  groupNames: 
  kind: RoleBinding
  metadata:
    name: "jenkins_edit"
  roleRef:
    name: edit
  subjects:
  - kind: ServiceAccount
    name: "jenkins"
- apiVersion: v1
  kind: Service
  metadata:
    name: "jenkins-jnlp"
  spec:
    ports:
    - name: agent
      nodePort: 0
      port: 50000
      protocol: TCP
      targetPort: 50000
    selector:
      name: "jenkins"
    sessionAffinity: None
    type: ClusterIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.alpha.openshift.io/dependencies: '[{"name": "jenkins-jnlp",
        "namespace": "", "kind": "Service"}]'
      service.openshift.io/infrastructure: 'true'
    name: "jenkins"
  spec:
    ports:
    - name: web
      nodePort: 0
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      name: "jenkins"
    sessionAffinity: None
    type: ClusterIP
parameters:
- description: Jenkins project namespace.
  displayName: Jenkins ImageStream Namespace
  name: NAMESPACE
  value: openshift
- description: Whether to perform memory intensive, possibly slow, synchronization
    with the Jenkins Update Center on start.  If true, the Jenkins core update monitor
    and site warnings monitor are disabled.
  displayName: Disable memory intensive administrative monitors
  name: DISABLE_ADMINISTRATIVE_MONITORS
  value: 'false'
